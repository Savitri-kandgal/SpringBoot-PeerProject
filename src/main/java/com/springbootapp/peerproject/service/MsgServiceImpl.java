package com.springbootapp.peerproject.service;

import java.util.Objects;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.springbootapp.peerproject.Entity.AppInfoEntity;
import com.springbootapp.peerproject.Entity.AppInfoRepository;
import com.springbootapp.peerproject.Entity.EnvEntity;
import com.springbootapp.peerproject.Entity.EnvRepository;
import com.springbootapp.peerproject.Entity.MessageEntity;
import com.springbootapp.peerproject.Entity.MessageRepository;
import com.springbootapp.peerproject.dto.AppInfoDTO;
import com.springbootapp.peerproject.dto.EnvDTO;
import com.springbootapp.peerproject.dto.MessageDTO;


@Service
public class MsgServiceImpl implements MsgService {

	@Autowired // This means to get the bean called msgRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private MessageRepository msgRepository;
	@Autowired
	private AppInfoRepository appInfoRepository;
	@Autowired
	private EnvRepository envRepository;

	//@Autowired
	//public MessageMapper mapper= Mappers.getMapper(MessageMapper.class);
	
	@Override
	public int validateAndSave(MessageDTO dto) {
		int valid = 1;
		try {
			if (Objects.nonNull(dto)) {
				System.out.println("starting to validate fields");

				if (dto.getfName() != null && !dto.getfName().isEmpty()) {
					System.out.println(" fname is valid :" + dto.getfName());

					valid = 0;
				} else {
					System.out.println(" fname is invalid :");
					valid = 1;
				}

				if (valid == 0 && dto.gettName() != null && !dto.gettName().isEmpty()) {
					System.out.println("Tname is valid :" + dto.gettName());

					valid = 0;
				} else {
					System.out.println(" Tname is invalid :");
					valid = 1;
				}

				if (valid == 0 && dto.getMessage() != null && !dto.getMessage().isEmpty()) {
					System.out.println("Message is valid :" + dto.getMessage());
					valid = 0;
				} else {
					System.out.println("Message is invalid :");
					valid = 1;
				}

				System.out.println("Checking if all fields are entered");
				if (valid == 0) {
					System.out.println("informations are valid :" + valid);

					System.out.println("copying data from dto to MessageEntity");
					MessageEntity mEntity = new MessageEntity();
					//MessageEntity mEntity =mapper.dtoToEntity(dto);
					BeanUtils.copyProperties(dto, mEntity);
					msgRepository.save(mEntity);
					System.out.println("saved data to the DB");
					System.out.println("SERVICE:------------ENDS : validateAndSave()-------------------------------");
					return 0;
				} else {
					System.out.println(" fields are missing, please enter the missing fields");
					return 1;
				}
			} else {
				System.out.println("dto is null");
				return 1;
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		System.out.println("LOGGER : SERVICE:------------ENDS : validateAndSave()-------------------------------");

		return 0;
	}

	@Override
	public int validateAndSaveAppInfo(AppInfoDTO appDTO, EnvDTO envDTO ) {
		int valid = 1;
		try {
			if (Objects.nonNull(appDTO)&&Objects.nonNull(envDTO)) {
				System.out.println("starting to validate fields");

				if (appDTO.getpName() != null && !appDTO.getpName().isEmpty()) {
					System.out.println(" project name is valid :" + appDTO.getpName());

					valid = 0;
				} else {
					System.out.println("project name is invalid :");
					valid = 1;
				}

				if (valid == 0 && appDTO.gettEmail()!= null && !appDTO.gettEmail().isEmpty()) {
					System.out.println("email id is valid :" + appDTO.gettEmail());

					valid = 0;
				} else {
					System.out.println(" email id is invalid :");
					valid = 1;
				}

				if (valid == 0 && appDTO.getdComissined() != null && !appDTO.getdComissined().isEmpty()) {
					System.out.println("de-commissined is valid :" + appDTO.getdComissined());
					valid = 0;
				} else {
					System.out.println("de-commissined is invalid :");
					valid = 1;
				}

				System.out.println("Checking if all fields are entered");
				if (valid == 0) {
					System.out.println("informations are valid :" + valid);

					System.out.println("copying data from dto to appInfoEntity");
					AppInfoEntity appEntity = new AppInfoEntity();
					EnvEntity envEntity=new EnvEntity();
					
					BeanUtils.copyProperties(appDTO, appEntity);
					BeanUtils.copyProperties(envDTO, envEntity);
					envEntity.setAppInfoEntity(appEntity);
					appInfoRepository.save(appEntity);
					envRepository.save(envEntity);
					System.out.println("saved data to the DB");
					System.out.println("SERVICE:------------ENDS : validateAndSaveAppInfo()-------------------------------");
					return 0;
				} else {
					System.out.println(" fields are missing, please enter the missing fields");
					return 1;
				}
			} else {
				System.out.println("dto is null");
				return 1;
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		System.out.println("LOGGER : SERVICE:------------ENDS : validateAndSaveAppInfo()-------------------------------");

		return 0;
	}


}
